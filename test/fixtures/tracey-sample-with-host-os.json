{
  "aggregated": {
    "files": 51,
    "suites": 64,
    "failed": {},
    "tests": {
      "count": 336,
      "statuses": {
        "passed": 329,
        "skipped": 7
      }
    },
    "prepared": true,
    "duration": 434611
  },
  "detail": {
    "/usr/src/app/test/0_startup.js": {
      "task": "/usr/src/app/test/0_startup.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/0_startup.js",
        "suites": [
          {
            "suite": "0_startup.js",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "update browser_primus script",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/0_startup.js",
                  "duration": 563,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "default startup time",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/0_startup.js",
                  "duration": 54,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1667
    },
    "/usr/src/app/test/1_eventemitter_embedded_sanity.js": {
      "task": "/usr/src/app/test/1_eventemitter_embedded_sanity.js",
      "success": true,
      "results": {},
      "duration": 6328
    },
    "/usr/src/app/test/2_websockets_embedded_sanity.js": {
      "task": "/usr/src/app/test/2_websockets_embedded_sanity.js",
      "success": true,
      "results": {},
      "duration": 5393
    },
    "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js": {
      "task": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
        "suites": [
          {
            "suite": "3_eventemitter_websockets_embedded_sanity",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should initialize the service",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 532,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should initialize the clients",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 157,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data ",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 26,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should set data, and then merge a new document into the data without overwriting old fields",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 39,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should search for a complex object",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 42,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should delete some test data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 8,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data then update the data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 6,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single published event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 10,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data ",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data then update the data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 9,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should push a sibling and get all siblings",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 12,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single published event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should get using a wildcard",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 19,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single delete event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 10,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from an event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 9,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe to the catch all notification",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from all events",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 3007,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "unsubscribes from the right event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/3_eventemitter_websockets_embedded_sanity.js",
                  "duration": 16,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 4593
    },
    "/usr/src/app/test/4_browser-client-test.js": {
      "task": "/usr/src/app/test/4_browser-client-test.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/4_browser-client-test.js",
        "suites": [
          {
            "suite": "4_browser-client-test",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should initialize the service",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/4_browser-client-test.js",
                  "duration": 331,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should fetch the browser client",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/4_browser-client-test.js",
                  "duration": 52,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1285
    },
    "/usr/src/app/test/5_eventemitter_stoppingstarting.js": {
      "task": "/usr/src/app/test/5_eventemitter_stoppingstarting.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/5_eventemitter_stoppingstarting.js",
        "suites": [
          {
            "suite": "5_eventemitter_stoppingstarting",
            "suites": [
              {
                "suite": "stopping and starting meshes",
                "suites": [],
                "tests": [
                  {
                    "test": {
                      "title": "should push some data into a permanent datastore",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/5_eventemitter_stoppingstarting.js",
                      "duration": 11,
                      "status": "passed"
                    },
                    "error": null
                  },
                  {
                    "test": {
                      "title": "should disconnect then reconnect and reverify the data",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/5_eventemitter_stoppingstarting.js",
                      "duration": 39,
                      "status": "passed"
                    },
                    "error": null
                  },
                  {
                    "test": {
                      "title": "should create a memory server - check for the data - shouldnt be any",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/5_eventemitter_stoppingstarting.js",
                      "duration": 54,
                      "status": "passed"
                    },
                    "error": null
                  },
                  {
                    "test": {
                      "title": "should stop then start and verify the server name",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/5_eventemitter_stoppingstarting.js",
                      "duration": 150,
                      "status": "passed"
                    },
                    "error": null
                  }
                ]
              }
            ],
            "tests": []
          }
        ]
      },
      "duration": 1477
    },
    "/usr/src/app/test/7_eventemitter_listeners.js": {
      "task": "/usr/src/app/test/7_eventemitter_listeners.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/7_eventemitter_listeners.js",
        "suites": [
          {
            "suite": "7_eventemitter_listeners",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "the listener should pick up a single wildcard event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7_eventemitter_listeners.js",
                  "duration": 15,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single published event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7_eventemitter_listeners.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single published event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7_eventemitter_listeners.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single delete event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7_eventemitter_listeners.js",
                  "duration": 6,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from an event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7_eventemitter_listeners.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe and get an initial value on the callback",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7_eventemitter_listeners.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe and get initial values on the callback",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7_eventemitter_listeners.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe and get initial values emitted immediately",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7_eventemitter_listeners.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe to the catch all notification",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7_eventemitter_listeners.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from all events",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7_eventemitter_listeners.js",
                  "duration": 3008,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 4192
    },
    "/usr/src/app/test/7a_websockets_listeners.js": {
      "task": "/usr/src/app/test/7a_websockets_listeners.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/7a_websockets_listeners.js",
        "suites": [
          {
            "suite": "7a_websockets_listeners",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "the listener should pick up a single wildcard event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7a_websockets_listeners.js",
                  "duration": 26,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single published event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7a_websockets_listeners.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single published event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7a_websockets_listeners.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single delete event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7a_websockets_listeners.js",
                  "duration": 10,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from an event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7a_websockets_listeners.js",
                  "duration": 12,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe and get an initial value on the callback",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7a_websockets_listeners.js",
                  "duration": 11,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe and get initial values on the callback",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7a_websockets_listeners.js",
                  "duration": 20,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe and get initial values emitted immediately",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7a_websockets_listeners.js",
                  "duration": 9,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe to the catch all notification",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7a_websockets_listeners.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from all events",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/7a_websockets_listeners.js",
                  "duration": 3008,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 4471
    },
    "/usr/src/app/test/8_websockets_embedded_ports.js": {
      "task": "/usr/src/app/test/8_websockets_embedded_ports.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/8_websockets_embedded_ports.js",
        "suites": [
          {
            "suite": "8_websockets_embedded_ports",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should initialize the services",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/8_websockets_embedded_ports.js",
                  "duration": 436,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should initialize the clients",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/8_websockets_embedded_ports.js",
                  "duration": 178,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1291
    },
    "/usr/src/app/test/9_eventemitter_meta.js": {
      "task": "/usr/src/app/test/9_eventemitter_meta.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/9_eventemitter_meta.js",
        "suites": [
          {
            "suite": "9_eventemitter_meta.js",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "tests the set meta data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "duration": 13,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the update meta data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the delete meta data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "duration": 6,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests created and modified dates, merge",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "duration": 1018,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests created and modified dates, not merge",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "duration": 1015,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests created and modified dates for an update, merge",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "duration": 1034,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests created and modified dates for an update, not merge",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "duration": 1021,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "searches by timestamps",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "duration": 3067,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the meta data is not enumerable for responses",
                  "sync": true,
                  "timedOut": false,
                  "pending": true,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "status": "skipped"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the meta data is not enumerable for gets",
                  "sync": true,
                  "timedOut": false,
                  "pending": true,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "status": "skipped"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the all meta data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9_eventemitter_meta.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 8229
    },
    "/usr/src/app/test/9a_websockets_meta.js": {
      "task": "/usr/src/app/test/9a_websockets_meta.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/9a_websockets_meta.js",
        "suites": [
          {
            "suite": "9a_websockets_meta.js",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "tests the set meta data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "duration": 16,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the update meta data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the delete meta data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "duration": 6,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests created and modified dates, merge",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "duration": 1015,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests created and modified dates, not merge",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "duration": 1013,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests created and modified dates for an update, merge",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "duration": 1022,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests created and modified dates for an update, not merge",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "duration": 1035,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "searches by timestamps",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "duration": 3062,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the meta data is not enumerable for responses",
                  "sync": true,
                  "timedOut": false,
                  "pending": true,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "status": "skipped"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the meta data is not enumerable for gets",
                  "sync": true,
                  "timedOut": false,
                  "pending": true,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "status": "skipped"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the all meta data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/9a_websockets_meta.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 8399
    },
    "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js": {
      "task": "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js",
        "suites": [
          {
            "suite": "a1_eventemitter_embedded_datatypes",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "the publisher should set string data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js",
                  "duration": 12,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set number data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set boolean data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set date data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set null data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set undefined data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set array data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "wildcards, the listener should pick up a single wildcard event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a1_eventemitter_embedded_datatypes.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1028
    },
    "/usr/src/app/test/a2_eventemitter_embedded_paths.js": {
      "task": "/usr/src/app/test/a2_eventemitter_embedded_paths.js",
      "success": true,
      "results": {},
      "duration": 4162
    },
    "/usr/src/app/test/a3_eventemitter_multiple_datasource.js": {
      "task": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
        "suites": [
          {
            "suite": "a3_eventemitter_multiple_datasource",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should push some data into the single datastore service",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 8,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should push some data into the multiple datastore",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should push some data into the multiple datastore, memory datastore, wildcard pattern",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 1018,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should push some data into the multiple datastore, persisted datastore, wildcard pattern",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 1008,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should push some data into the multiple datastore, memory datastore, exact pattern",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 1012,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should push some data into the multiple datastore, persisted datastore, exact pattern",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 1010,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should push some data into the multiple datastore, default pattern",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 1055,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should tag some persisted data for the multiple datastore",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 1047,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "check the same event should be raised, regardless of what data source we are pushing to",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 1014,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should not find the pattern to be added in the persisted datastore",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 1013,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should add a pattern to the persisted datastore, and check it works",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 1008,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should remove a pattern from the persisted datastore",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a3_eventemitter_multiple_datasource.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 10209
    },
    "/usr/src/app/test/a4_security_encryption.js": {
      "task": "/usr/src/app/test/a4_security_encryption.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/a4_security_encryption.js",
        "suites": [
          {
            "suite": "a4_security_encryption.js",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should generate a keypair",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a4_security_encryption.js",
                  "duration": 20,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should serialize and deserialize a keypair",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a4_security_encryption.js",
                  "duration": 12,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should encrypt and decrypt data using the security layer",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a4_security_encryption.js",
                  "duration": 55,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should encrypt and decrypt data using symmetric hashing in the security layer",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a4_security_encryption.js",
                  "duration": 50,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1152
    },
    "/usr/src/app/test/a5_eventemitter_security_groups_users_permissions.js": {
      "task": "/usr/src/app/test/a5_eventemitter_security_groups_users_permissions.js",
      "success": true,
      "results": {},
      "duration": 1331
    },
    "/usr/src/app/test/a6_eventemitter_security_startup.js": {
      "task": "/usr/src/app/test/a6_eventemitter_security_startup.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/a6_eventemitter_security_startup.js",
        "suites": [
          {
            "suite": "a6_eventemitter_security_groups",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should have a default keypair in memory",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a6_eventemitter_security_startup.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the default keypair in memory must exist in the system security leaf",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a6_eventemitter_security_startup.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should have a default admin group",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a6_eventemitter_security_startup.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should have a default admin user",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/a6_eventemitter_security_startup.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 804
    },
    "/usr/src/app/test/a7_eventemitter_security_access.js": {
      "task": "/usr/src/app/test/a7_eventemitter_security_access.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
        "suites": [
          {
            "suite": "a7_eventemitter_security_access",
            "suites": [
              {
                "suite": "login",
                "suites": [
                  {
                    "suite": "resources access testing",
                    "suites": [],
                    "tests": [
                      {
                        "test": {
                          "title": "adds permissions to the upserted group",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 8,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed on, and prevented from on",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 7,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed set, and prevented from set",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 5,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed get, and prevented from get",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 4,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed get but not set",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 2,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed get and on but not set",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 4,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed get but not on",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 3,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed on but not get",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 2,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed set but not get",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 2,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed set but not on",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 4,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed get all",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 1,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed on all",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 0,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks allowed set all",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 1,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "checks against a permission that doesnt exist",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 1,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "unlinks the test group from the user, checks that the user no longer has access",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 3,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "re-links the test group to the test user, tests we have access again",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 20,
                          "status": "passed"
                        },
                        "error": null
                      },
                      {
                        "test": {
                          "title": "deletes the test user, tests we are notified about the session closure, then have no access",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                          "duration": 4,
                          "status": "passed"
                        },
                        "error": null
                      }
                    ]
                  }
                ],
                "tests": [
                  {
                    "test": {
                      "title": "authenticates with the _ADMIN user, using the default password",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                      "duration": 47,
                      "status": "passed"
                    },
                    "error": null
                  },
                  {
                    "test": {
                      "title": "fails to authenticate with the _ADMIN user, using a bad password",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/a7_eventemitter_security_access.js",
                      "duration": 31,
                      "status": "passed"
                    },
                    "error": null
                  }
                ]
              }
            ],
            "tests": []
          }
        ]
      },
      "duration": 1318
    },
    "/usr/src/app/test/a8_eventemitter_security_audit.js": {
      "task": "/usr/src/app/test/a8_eventemitter_security_audit.js",
      "success": true,
      "results": {
        "file": null,
        "suites": []
      },
      "duration": 196
    },
    "/usr/src/app/test/a9_eventemitter_security_events.js": {
      "task": "/usr/src/app/test/a9_eventemitter_security_events.js",
      "success": true,
      "results": {
        "file": null,
        "suites": []
      },
      "duration": 253
    },
    "/usr/src/app/test/b1_websockets_security_check_for_holes.js": {
      "task": "/usr/src/app/test/b1_websockets_security_check_for_holes.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/b1_websockets_security_check_for_holes.js",
        "suites": [
          {
            "suite": "b1_websockets_security_check_for_holes",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "traverses the websocket clients object model to look for forbidden method signatures",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b1_websockets_security_check_for_holes.js",
                  "duration": 38,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1382
    },
    "/usr/src/app/test/b2_eventemitter_security_stoppingstarting.js": {
      "task": "/usr/src/app/test/b2_eventemitter_security_stoppingstarting.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/b2_eventemitter_security_stoppingstarting.js",
        "suites": [
          {
            "suite": "b2_eventemitter_security_stoppingstarting",
            "suites": [
              {
                "suite": "stopping and starting secure meshes",
                "suites": [],
                "tests": [
                  {
                    "test": {
                      "title": "should push some data into a permanent datastore",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/b2_eventemitter_security_stoppingstarting.js",
                      "duration": 48,
                      "status": "passed"
                    },
                    "error": null
                  },
                  {
                    "test": {
                      "title": "should disconnect then reconnect and reverify the data",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/b2_eventemitter_security_stoppingstarting.js",
                      "duration": 59,
                      "status": "passed"
                    },
                    "error": null
                  },
                  {
                    "test": {
                      "title": "should create a memory server - check for the data - shouldnt be any",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/b2_eventemitter_security_stoppingstarting.js",
                      "duration": 82,
                      "status": "passed"
                    },
                    "error": null
                  },
                  {
                    "test": {
                      "title": "should stop then start and verify the server name",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/b2_eventemitter_security_stoppingstarting.js",
                      "duration": 103,
                      "status": "passed"
                    },
                    "error": null
                  },
                  {
                    "test": {
                      "title": "should stop then start and verify the server keypair",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/b2_eventemitter_security_stoppingstarting.js",
                      "duration": 79,
                      "status": "passed"
                    },
                    "error": null
                  }
                ]
              }
            ],
            "tests": []
          }
        ]
      },
      "duration": 1362
    },
    "/usr/src/app/test/b3_login_info.js": {
      "task": "/usr/src/app/test/b3_login_info.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/b3_login_info.js",
        "suites": [
          {
            "suite": "b3_login_info",
            "suites": [
              {
                "suite": "insecure server",
                "suites": [
                  {
                    "suite": "secure server",
                    "suites": [],
                    "tests": [
                      {
                        "test": {
                          "title": "login info is carried across login",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/b3_login_info.js",
                          "duration": 236,
                          "status": "passed"
                        },
                        "error": null
                      }
                    ]
                  }
                ],
                "tests": [
                  {
                    "test": {
                      "title": "login info is carried across login",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/b3_login_info.js",
                      "duration": 558,
                      "status": "passed"
                    },
                    "error": null
                  }
                ]
              }
            ],
            "tests": []
          }
        ]
      },
      "duration": 1855
    },
    "/usr/src/app/test/b4_start_no_config.js": {
      "task": "/usr/src/app/test/b4_start_no_config.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/b4_start_no_config.js",
        "suites": [
          {
            "suite": "b4_start_no_config",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should initialize the service with no config",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b4_start_no_config.js",
                  "duration": 324,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 868
    },
    "/usr/src/app/test/b5_websockets_search.js": {
      "task": "/usr/src/app/test/b5_websockets_search.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/b5_websockets_search.js",
        "suites": [
          {
            "suite": "b5_websockets_search",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "can get using criteria",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b5_websockets_search.js",
                  "duration": 9,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "can get using criteria, limit to fields",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b5_websockets_search.js",
                  "duration": 10,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "can get the latest record, without _meta",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b5_websockets_search.js",
                  "duration": 36,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "can get the latest record",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b5_websockets_search.js",
                  "duration": 27,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1029
    },
    "/usr/src/app/test/b6_eventemitter_search.js": {
      "task": "/usr/src/app/test/b6_eventemitter_search.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/b6_eventemitter_search.js",
        "suites": [
          {
            "suite": "b6_eventemitter_search",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "can get using criteria",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b6_eventemitter_search.js",
                  "duration": 13,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "can get using criteria, limit to fields",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b6_eventemitter_search.js",
                  "duration": 10,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "can get the latest record, without _meta",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b6_eventemitter_search.js",
                  "duration": 20,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "can get the latest record",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b6_eventemitter_search.js",
                  "duration": 27,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1034
    },
    "/usr/src/app/test/b7_security_https_initialization.js": {
      "task": "/usr/src/app/test/b7_security_https_initialization.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/b7_security_https_initialization.js",
        "suites": [
          {
            "suite": "b7_security_https",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "starts an https server, with a configured cert and key",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b7_security_https_initialization.js",
                  "duration": 409,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "starts an https server, with a configured cert and key file path pointing to existing files",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b7_security_https_initialization.js",
                  "duration": 119,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "starts an https server, with a configured cert and key file path pointing to non-existing files",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b7_security_https_initialization.js",
                  "duration": 608,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "it fails to start an https, due to bad values in the cert",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b7_security_https_initialization.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "it fails to start an https, due to bad values in the key",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b7_security_https_initialization.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "it fails to start an https server, missing key",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b7_security_https_initialization.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "it fails to start an https server, missing cert",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b7_security_https_initialization.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "it fails to start an https server, missing key file path",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b7_security_https_initialization.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "it fails to start an https server, missing cert file path",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b7_security_https_initialization.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1710
    },
    "/usr/src/app/test/b8_security_https_websockets_sanity.js": {
      "task": "/usr/src/app/test/b8_security_https_websockets_sanity.js",
      "success": true,
      "results": {},
      "duration": 4762
    },
    "/usr/src/app/test/b9_security_web_token.js": {
      "task": "/usr/src/app/test/b9_security_web_token.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/b9_security_web_token.js",
        "suites": [
          {
            "suite": "b9_security_web_token",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "the server should set up a secure route, the admin client should connect ok",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 362,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the server should set up a secure route, the admin client should connect ok passing the token on the querystring",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 16,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the server should set up another secure route, the test client should fail to connect",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 11,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "updates the group associated with the test user to allow gets to the path, the user should succeed in connecting to the url",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 11,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "updates the group associated with the test user to allow gets to the path, the user should succeed in connecting to the url with the query string",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 11,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the excluded wildcard route to ensure anyone can access it",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 6,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the excluded specific route to ensure anyone can access it",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests doing a request for a token using a GET with a username and password",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 41,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests doing a request for a nonce using a GET with a username and password, nonce is encrypted for a login",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 37,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "removes the permission from the test group - we ensure we can not access the resource with the token",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 75,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "removes the user associated with the token - we ensure we can not access the resource with the token",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/b9_security_web_token.js",
                  "duration": 78,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1724
    },
    "/usr/src/app/test/c1_security_pubpriv_login.js": {
      "task": "/usr/src/app/test/c1_security_pubpriv_login.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/c1_security_pubpriv_login.js",
        "suites": [
          {
            "suite": "c1_security_pubpriv_login",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "tests the keypairs",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c1_security_pubpriv_login.js",
                  "duration": 48,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests static keypairs",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c1_security_pubpriv_login.js",
                  "duration": 34,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "logs in with the test client, supplying a public key - we check that we have a session secret",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c1_security_pubpriv_login.js",
                  "duration": 205,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "logs in with the test client, supplying a public key - receives a sessionSecret annd performs a set and get operation",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c1_security_pubpriv_login.js",
                  "duration": 119,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "logs in with the test client, supplying a public key - receives a sessionSecret annd performs an on operation",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c1_security_pubpriv_login.js",
                  "duration": 95,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "logs in with 2 test clients, supplying a public key - receives a sessionSecret annd performs an on operation between the 2 clients",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c1_security_pubpriv_login.js",
                  "duration": 141,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "fails to log in with the test client, without supplying a public key to the default encryptPayload server",
                  "sync": true,
                  "timedOut": false,
                  "pending": true,
                  "type": "test",
                  "file": "/usr/src/app/test/c1_security_pubpriv_login.js",
                  "status": "skipped"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1585
    },
    "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js": {
      "task": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
        "suites": [
          {
            "suite": "c2_websockets_embedded_sanity_encryptedpayloads",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "the listener should pick up a single published event, eventemitter listening",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 26,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single published event, eventemitter publishing",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 8,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data ",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should set data, and then merge a new document into the data without overwriting old fields",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 8,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should search for a complex object",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 19,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should delete some test data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 17,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data then update the data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 8,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data ",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 6,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data then update the data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 8,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should push a sibling and get all siblings",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 13,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single published event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 9,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should get using a wildcard",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 21,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single delete event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 16,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from an event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 15,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe to the catch all notification",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from all events",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c2_websockets_embedded_sanity_encryptedpayloads.js",
                  "duration": 3013,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 4330
    },
    "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js": {
      "task": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
        "suites": [
          {
            "suite": "c3_websockets_embedded_sanity_encryptedpayloads",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "the listener should pick up a single published event, eventemitter listening",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 15,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single published event, eventemitter publishing",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data ",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should set data, and then merge a new document into the data without overwriting old fields",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should search for a complex object",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 17,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should delete some test data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data then update the data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 6,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data ",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 6,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should set new data then update the data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the publisher should push a sibling and get all siblings",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single published event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should get using a wildcard",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 8,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "the listener should pick up a single delete event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from an event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should subscribe to the catch all notification",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from all events",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c3_websockets_embedded_sanity_encryptedpayloads_noclientkeypair.js",
                  "duration": 3007,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 4250
    },
    "/usr/src/app/test/c4_session_events.js": {
      "task": "/usr/src/app/test/c4_session_events.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/c4_session_events.js",
        "suites": [
          {
            "suite": "c4_session_events",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "tests session events on an unsecured mesh",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c4_session_events.js",
                  "duration": 427,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests session events on a secure mesh",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c4_session_events.js",
                  "duration": 138,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1066
    },
    "/usr/src/app/test/c5_client_events.js": {
      "task": "/usr/src/app/test/c5_client_events.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/c5_client_events.js",
        "suites": [
          {
            "suite": "c5_client_events",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "logs on with a client and attached to the client side end event, we stop the server and ensure the end event is fired",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c5_client_events.js",
                  "duration": 189,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "logs on with a client and attached to the client side reconnection events, we destroy the client sockets on the server - check the reconnect events fire, check reconnection happens and we can push data ok",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c5_client_events.js",
                  "duration": 2090,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 3112
    },
    "/usr/src/app/test/c6_backward_compatible_db.js": {
      "task": "/usr/src/app/test/c6_backward_compatible_db.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/c6_backward_compatible_db.js",
        "suites": [
          {
            "suite": "c6_backward_compatible_db",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "starts up all the dbs in the backwards compatable folder",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c6_backward_compatible_db.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 544
    },
    "/usr/src/app/test/c7_db_iterate.js": {
      "task": "/usr/src/app/test/c7_db_iterate.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/c7_db_iterate.js",
        "suites": [
          {
            "suite": "c7_ds_iterate",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "iterates over a single default ds instance",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c7_db_iterate.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "iterates over multiple ds instances",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c7_db_iterate.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "iterates a specific ds instance amongst multiple ds instances",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c7_db_iterate.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "iterates another specific ds instance amongst multiple ds instances",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c7_db_iterate.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "fails to find an instance on a single",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c7_db_iterate.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "fails to find an instance on a multiple",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c7_db_iterate.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1262
    },
    "/usr/src/app/test/c8_listen.js": {
      "task": "/usr/src/app/test/c8_listen.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/c8_listen.js",
        "suites": [
          {
            "suite": "c8_deferred_listen",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should connect to the service with an intra-proc client, perform a set, get and remove",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c8_listen.js",
                  "duration": 12,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should stop the service, even though it hasnt started listening",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c8_listen.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should initialize the service without listening again",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c8_listen.js",
                  "duration": 46,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should try and start the service, but fail with EADDRINUSE, then kill the http server, then successfully retry",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c8_listen.js",
                  "duration": 2063,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 3341
    },
    "/usr/src/app/test/c9_unsubscribe_changes_eventemitter.js": {
      "task": "/usr/src/app/test/c9_unsubscribe_changes_eventemitter.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/c9_unsubscribe_changes_eventemitter.js",
        "suites": [
          {
            "suite": "c9_unsubscribe_changes_eventemitter",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should unsubscribe from an event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c9_unsubscribe_changes_eventemitter.js",
                  "duration": 2012,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from an event path",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c9_unsubscribe_changes_eventemitter.js",
                  "duration": 1004,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from an event path using a wildcard",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c9_unsubscribe_changes_eventemitter.js",
                  "duration": 1003,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests various fail conditions",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c9_unsubscribe_changes_eventemitter.js",
                  "duration": 11,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from all events",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c9_unsubscribe_changes_eventemitter.js",
                  "duration": 3010,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 7967
    },
    "/usr/src/app/test/c9_unsubscribe_changes_websockets.js": {
      "task": "/usr/src/app/test/c9_unsubscribe_changes_websockets.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/c9_unsubscribe_changes_websockets.js",
        "suites": [
          {
            "suite": "c9_unsubscribe_changes_websockets",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should unsubscribe from an event",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c9_unsubscribe_changes_websockets.js",
                  "duration": 2016,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from an event path",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c9_unsubscribe_changes_websockets.js",
                  "duration": 1012,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from an event path using a wildcard",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c9_unsubscribe_changes_websockets.js",
                  "duration": 1005,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests various fail conditions",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c9_unsubscribe_changes_websockets.js",
                  "duration": 8,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should unsubscribe from all events",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/c9_unsubscribe_changes_websockets.js",
                  "duration": 3006,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 8183
    },
    "/usr/src/app/test/d1_handleDataResponse.js": {
      "task": "/usr/src/app/test/d1_handleDataResponse.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/d1_handleDataResponse.js",
        "suites": [
          {
            "suite": "d1_handleDataResponse",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should test handleDataResponse error with handler",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d1_handleDataResponse.js",
                  "duration": 17,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should test handleDataResponse error without handler",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d1_handleDataResponse.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1104
    },
    "/usr/src/app/test/d2_primus_client_options.js": {
      "task": "/usr/src/app/test/d2_primus_client_options.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/d2_primus_client_options.js",
        "suites": [
          {
            "suite": "d2_primus_client_options.js",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should initialize a client, check the standard configuration is in place",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d2_primus_client_options.js",
                  "duration": 127,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should initialize a client, and set up configurable options",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d2_primus_client_options.js",
                  "duration": 62,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should initialize a client, and set up configurable options, not nested",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d2_primus_client_options.js",
                  "duration": 29,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1851
    },
    "/usr/src/app/test/d3_security_tokens.js": {
      "task": "/usr/src/app/test/d3_security_tokens.js",
      "success": true,
      "results": {},
      "duration": 16219
    },
    "/usr/src/app/test/d4_data_functional.js": {
      "task": "/usr/src/app/test/d4_data_functional.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/d4_data_functional.js",
        "suites": [
          {
            "suite": "d3_data_functional",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "sets data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 128,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets no data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "merges data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 1020,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tags data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 11,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "removes data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "removes multiple data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets data with wildcard",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets data with complex search",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 13,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets data with $not",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "sets value data",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "does a sort and limit",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d4_data_functional.js",
                  "duration": 36,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1600
    },
    "/usr/src/app/test/d5_test_cache_service.js": {
      "task": "/usr/src/app/test/d5_test_cache_service.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/d5_test_cache_service.js",
        "suites": [
          {
            "suite": "d5_test_cache_service",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "sets data, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 13,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets data, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 6,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets no data, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "removes data, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "retrieves unfound data, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets and sets data, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets no data, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "removes data, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 16,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "retrieves unfound data, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "times data out, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 1007,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "times data out, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 2004,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "clears the default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 15,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "clears the specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "clears the default cache, then sets an item on it",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the default mechanism and update, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 1003,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the default mechanism and update, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 1207,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the increment function, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the increment function, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 11,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the all function, default cache",
                  "sync": true,
                  "timedOut": false,
                  "pending": true,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "status": "skipped"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the all function, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d5_test_cache_service.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 5596
    },
    "/usr/src/app/test/d6_test_cache_service_lru.js": {
      "task": "/usr/src/app/test/d6_test_cache_service_lru.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
        "suites": [
          {
            "suite": "d6_test_cache_service",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "sets data, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 9,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets data, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets no data, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "removes data, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "retrieves unfound data, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets and sets data, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "gets no data, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 2,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "removes data, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 8,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "retrieves unfound data, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "times data out, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 1007,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "times data out, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 2030,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "clears the default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 47,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "clears the specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "clears the default cache, then sets an item on it",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 7,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the default mechanism and update, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 2019,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the default mechanism and update, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 1206,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the increment function, default cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the increment function, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 8,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the all function, specific cache",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d6_test_cache_service_lru.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 6667
    },
    "/usr/src/app/test/d7_test_cache_service_persist.js": {
      "task": "/usr/src/app/test/d7_test_cache_service_persist.js",
      "success": true,
      "results": {},
      "duration": 8532
    },
    "/usr/src/app/test/d8_session_management_unit.js": {
      "task": "/usr/src/app/test/d8_session_management_unit.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/d8_session_management_unit.js",
        "suites": [
          {
            "suite": "d8_session_management",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "tests sessionActivity activation",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d8_session_management_unit.js",
                  "duration": 135,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests security services addActiveSession and removeActiveSession",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d8_session_management_unit.js",
                  "duration": 67,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests security services update session activity, list session activity",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d8_session_management_unit.js",
                  "duration": 7059,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests security services list session activity, with a filter",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d8_session_management_unit.js",
                  "duration": 51,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests security services session activity no duplicates",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d8_session_management_unit.js",
                  "duration": 32,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests security services session revocation",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d8_session_management_unit.js",
                  "duration": 65,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests pubsub services session logging",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d8_session_management_unit.js",
                  "duration": 2051,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests pubsub services session logging switched on",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d8_session_management_unit.js",
                  "duration": 2050,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests session revocation times out",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d8_session_management_unit.js",
                  "duration": 6074,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests session revocation times out after restart",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d8_session_management_unit.js",
                  "duration": 6052,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 24502
    },
    "/usr/src/app/test/d9_session_management_sanity.js": {
      "task": "/usr/src/app/test/d9_session_management_sanity.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/d9_session_management_sanity.js",
        "suites": [
          {
            "suite": "d9_session_management_sanity",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "tests active sessions and session activity logging on a secure instance",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d9_session_management_sanity.js",
                  "duration": 3488,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests session revocation on a secure instance",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d9_session_management_sanity.js",
                  "duration": 5452,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests session management, multiple clients",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d9_session_management_sanity.js",
                  "duration": 15430,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests session management, switching on session management with activity logging",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d9_session_management_sanity.js",
                  "duration": 3611,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests session management, switching on session management without activity logging",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d9_session_management_sanity.js",
                  "duration": 3452,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests session management, switching on session management without activity logging, then starting up activity logging",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/d9_session_management_sanity.js",
                  "duration": 5621,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 38480
    },
    "/usr/src/app/test/e1_pubsub_middleware_unit.js": {
      "task": "/usr/src/app/test/e1_pubsub_middleware_unit.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/e1_pubsub_middleware_unit.js",
        "suites": [
          {
            "suite": "e1_pubsub_middleware_unit",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "tests the __initializeMiddeware function for pubsub",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e1_pubsub_middleware_unit.js",
                  "duration": 82,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the __initializeMiddeware function init failed for pubsub",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e1_pubsub_middleware_unit.js",
                  "duration": 4,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the protocol transformer",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e1_pubsub_middleware_unit.js",
                  "duration": 1,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the message spy transformer",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e1_pubsub_middleware_unit.js",
                  "duration": 5,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests the message encryption transformer",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e1_pubsub_middleware_unit.js",
                  "duration": 3,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 885
    },
    "/usr/src/app/test/e2_pubsub_middleware_sanity.js": {
      "task": "/usr/src/app/test/e2_pubsub_middleware_sanity.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/e2_pubsub_middleware_sanity.js",
        "suites": [
          {
            "suite": "e2_pubsub_middleware_sanity",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "tests injecting spy middleware into the pubsub service, as an instance",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e2_pubsub_middleware_sanity.js",
                  "duration": 3949,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests injecting spy middleware into the pubsub service, as a path",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e2_pubsub_middleware_sanity.js",
                  "duration": 3594,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "tests injecting arbitrary middleware into the pubsub service, as an instance",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e2_pubsub_middleware_sanity.js",
                  "duration": 93,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 8196
    },
    "/usr/src/app/test/e3-client-connection-events.js": {
      "task": "/usr/src/app/test/e3-client-connection-events.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/e3-client-connection-events.js",
        "suites": [
          {
            "suite": "e3-client-connection-events.js",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "emits connection-ended",
                  "sync": true,
                  "timedOut": false,
                  "pending": true,
                  "type": "test",
                  "file": "/usr/src/app/test/e3-client-connection-events.js",
                  "status": "skipped"
                },
                "error": null
              },
              {
                "test": {
                  "title": "emits reconnect-scheduled",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e3-client-connection-events.js",
                  "duration": 649,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "emits reconnect-successful",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e3-client-connection-events.js",
                  "duration": 1162,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "enables subscribe and unsubscribe",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e3-client-connection-events.js",
                  "duration": 540,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 3323
    },
    "/usr/src/app/test/e4-publish-noCluster.js": {
      "task": "/usr/src/app/test/e4-publish-noCluster.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/e4-publish-noCluster.js",
        "suites": [
          {
            "suite": "e4-publish-noCluster.js",
            "suites": [
              {
                "suite": "on set",
                "suites": [
                  {
                    "suite": "on remove",
                    "suites": [
                      {
                        "suite": "on tag",
                        "suites": [
                          {
                            "suite": "on merge",
                            "suites": [],
                            "tests": [
                              {
                                "test": {
                                  "title": "does not emit to clusterPeer if noCluster set",
                                  "async": 1,
                                  "sync": false,
                                  "timedOut": false,
                                  "pending": false,
                                  "type": "test",
                                  "file": "/usr/src/app/test/e4-publish-noCluster.js",
                                  "duration": 214,
                                  "status": "passed"
                                },
                                "error": null
                              }
                            ]
                          }
                        ],
                        "tests": [
                          {
                            "test": {
                              "title": "does not emit to clusterPeer if noCluster set",
                              "async": 1,
                              "sync": false,
                              "timedOut": false,
                              "pending": false,
                              "type": "test",
                              "file": "/usr/src/app/test/e4-publish-noCluster.js",
                              "duration": 217,
                              "status": "passed"
                            },
                            "error": null
                          }
                        ]
                      }
                    ],
                    "tests": [
                      {
                        "test": {
                          "title": "does not emit to clusterPeer if noCluster set",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/e4-publish-noCluster.js",
                          "duration": 218,
                          "status": "passed"
                        },
                        "error": null
                      }
                    ]
                  }
                ],
                "tests": [
                  {
                    "test": {
                      "title": "does not emit to clusterPeer if noCluster set",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/e4-publish-noCluster.js",
                      "duration": 232,
                      "status": "passed"
                    },
                    "error": null
                  }
                ]
              }
            ],
            "tests": []
          }
        ]
      },
      "duration": 2287
    },
    "/usr/src/app/test/e5-login-digest.js": {
      "task": "/usr/src/app/test/e5-login-digest.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/e5-login-digest.js",
        "suites": [
          {
            "suite": "e5-login-digest",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "logs in with digest authentication",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e5-login-digest.js",
                  "duration": 247,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 1233
    },
    "/usr/src/app/test/e5-server-restart.js": {
      "task": "/usr/src/app/test/e5-server-restart.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/e5-server-restart.js",
        "suites": [
          {
            "suite": "e5-server-restart.js",
            "suites": [
              {
                "suite": "subscriptions",
                "suites": [],
                "tests": [
                  {
                    "test": {
                      "title": "subscriptions are resumed without duplication after server restart",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/e5-server-restart.js",
                      "duration": 1048,
                      "status": "passed"
                    },
                    "error": null
                  }
                ]
              }
            ],
            "tests": []
          }
        ]
      },
      "duration": 1891
    },
    "/usr/src/app/test/e6-targetClients.js": {
      "task": "/usr/src/app/test/e6-targetClients.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/e6-targetClients.js",
        "suites": [
          {
            "suite": "2_websockets_embedded_sanity",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "should ensure a targeted publish does not go to an unsecured middle man",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e6-targetClients.js",
                  "duration": 2040,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "ensure an targeted publish gets to both unsecured clients",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e6-targetClients.js",
                  "duration": 2010,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "ensures an un-targeted publish gets to both unsecured clients",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e6-targetClients.js",
                  "duration": 2010,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "should ensure a targeted publish does not go to an secured middle man",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e6-targetClients.js",
                  "duration": 2014,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "ensure an targeted publish gets to both secured secureClients",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e6-targetClients.js",
                  "duration": 2010,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "ensures an un-targeted publish gets to both secured secureClients",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e6-targetClients.js",
                  "duration": 2011,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 13478
    },
    "/usr/src/app/test/e7-login-failures-reconnect.js": {
      "task": "/usr/src/app/test/e7-login-failures-reconnect.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/e7-login-failures-reconnect.js",
        "suites": [
          {
            "suite": "e7-login-failures-reconnect.js",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "logs in normally",
                  "async": 0,
                  "sync": true,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e7-login-failures-reconnect.js",
                  "duration": 39,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "can login again if a login attempt failed on reconnect",
                  "async": 0,
                  "sync": true,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e7-login-failures-reconnect.js",
                  "duration": 22605,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "emits when it retries to reconnect",
                  "async": 0,
                  "sync": true,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e7-login-failures-reconnect.js",
                  "duration": 2149,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "does not retry if we are connected",
                  "async": 0,
                  "sync": true,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e7-login-failures-reconnect.js",
                  "duration": 22157,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "will not reconnect after shutdown",
                  "async": 0,
                  "sync": true,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e7-login-failures-reconnect.js",
                  "duration": 40279,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "kills a client that is started with \"create\" and fails to login",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e7-login-failures-reconnect.js",
                  "duration": 10195,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "only calls the create callback once",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e7-login-failures-reconnect.js",
                  "duration": 30048,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 128412
    },
    "/usr/src/app/test/e8_account_lockout.js": {
      "task": "/usr/src/app/test/e8_account_lockout.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/e8_account_lockout.js",
        "suites": [
          {
            "suite": "e8_account_lockout.js",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "fails to login twice, we then get an account locked out, then login successfully after 3 seconds",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e8_account_lockout.js",
                  "duration": 3789,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "fails to login thrice, we then get an account locked out twice, then login successfully after 5 seconds",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e8_account_lockout.js",
                  "duration": 5395,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "does 2 unsuccessful logins out of 3, we wait the ttl and we no longer have a lock record",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e8_account_lockout.js",
                  "duration": 3153,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "starts up the service ensures we have the correct defaults for the security config",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e8_account_lockout.js",
                  "duration": 62,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 13165
    },
    "/usr/src/app/test/e9_revoke_session.js": {
      "task": "/usr/src/app/test/e9_revoke_session.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/e9_revoke_session.js",
        "suites": [
          {
            "suite": "e9_client_disconnect",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "logs in with the websockets user - we then test a call to a web-method, then disconnects with the revokeToken flag set to true, we try and reuse the token and ensure that it fails",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e9_revoke_session.js",
                  "duration": 528,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "logs in with the websockets user - we then test a call to a web-method, then disconnects with the revokeToken flag set to false, we try and reuse the token and ensure that it succeeds",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e9_revoke_session.js",
                  "duration": 74,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "logs in with the websockets user - we then test a call to a web-method, then disconnects with the revokeToken flag set to true, we try and reuse the token and ensure that it fails, then wait longer and ensure even after the token is revoked it still fails",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/e9_revoke_session.js",
                  "duration": 4078,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 5682
    },
    "/usr/src/app/test/f1-login-using-token.js": {
      "task": "/usr/src/app/test/f1-login-using-token.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/f1-login-using-token.js",
        "suites": [
          {
            "suite": "h1_login_using_token",
            "suites": [],
            "tests": [
              {
                "test": {
                  "title": "000: logs in with the test client does test operations",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/f1-login-using-token.js",
                  "duration": 119,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "001: logs in with the test client, supplying a public key, we perform a bunch of operations - we remember the token and logout - then login with the token, and test operations",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/f1-login-using-token.js",
                  "duration": 99,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "002: logs in with the test client, supplying a public key, we perform a bunch of operations - we wait for the short session to time out, then try and reuse the token for login, it should not be allowed",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/f1-login-using-token.js",
                  "duration": 2091,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "003: testing inverse of test 002, so no timed out session",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/f1-login-using-token.js",
                  "duration": 2077,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "004: logs in with the test client, supplying a public key, we perform a bunch of operations - we remember the token and logout revoking the token - we then ensure we are unable to login with the revoked token",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/f1-login-using-token.js",
                  "duration": 2152,
                  "status": "passed"
                },
                "error": null
              },
              {
                "test": {
                  "title": "005: checks we are able to log in to another instance with the same token.",
                  "async": 1,
                  "sync": false,
                  "timedOut": false,
                  "pending": false,
                  "type": "test",
                  "file": "/usr/src/app/test/f1-login-using-token.js",
                  "duration": 2087,
                  "status": "passed"
                },
                "error": null
              }
            ]
          }
        ]
      },
      "duration": 9439
    },
    "/usr/src/app/test/h7_primus_heartbeat.js": {
      "task": "/usr/src/app/test/h7_primus_heartbeat.js",
      "success": true,
      "results": {
        "file": "/usr/src/app/test/h7_primus_heartbeat.js",
        "suites": [
          {
            "suite": "h7_primus_heartbeat.js",
            "suites": [
              {
                "suite": "with large payload",
                "suites": [
                  {
                    "suite": "with short network segmentation",
                    "suites": [],
                    "tests": [
                      {
                        "test": {
                          "title": "client receives expected data pattern",
                          "async": 1,
                          "sync": false,
                          "timedOut": false,
                          "pending": false,
                          "type": "test",
                          "file": "/usr/src/app/test/h7_primus_heartbeat.js",
                          "duration": 8712,
                          "status": "passed"
                        },
                        "error": null
                      }
                    ]
                  }
                ],
                "tests": [
                  {
                    "test": {
                      "title": "client receives expected event pattern",
                      "async": 1,
                      "sync": false,
                      "timedOut": false,
                      "pending": false,
                      "type": "test",
                      "file": "/usr/src/app/test/h7_primus_heartbeat.js",
                      "duration": 8540,
                      "status": "passed"
                    },
                    "error": null
                  }
                ]
              }
            ],
            "tests": []
          }
        ]
      },
      "duration": 22782
    }
  },
  "context": {
    "host_os": "MacBook-Air_darwin_x64",
    "version": "2.21.0",
    "node": "7",
    "owner": "happner",
    "repo": "happn",
    "branch": "master"
  }
}
